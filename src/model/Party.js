/**
 * TempApi
 * This is a sample openApi document
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: lampralexandros@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PartyPartyImage from './PartyPartyImage';

/**
 * The Party model module.
 * @module model/Party
 * @version 1.0.0
 */
class Party {
    /**
     * Constructs a new <code>Party</code>.
     * @alias module:model/Party
     * @param partyDate {String} 
     * @param partyDetails {String} 
     * @param partyTheme {String} 
     * @param partyHost {String} 
     * @param partyImage {module:model/PartyPartyImage} 
     * @param partyTime {String} 
     * @param partyTitle {String} 
     * @param partyAdress {String} 
     * @param partyParticipants {Array.<String>} 
     */
    constructor(partyDate, partyDetails, partyTheme, partyHost, partyImage, partyTime, partyTitle, partyAdress, partyParticipants) { 
        
        Party.initialize(this, partyDate, partyDetails, partyTheme, partyHost, partyImage, partyTime, partyTitle, partyAdress, partyParticipants);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, partyDate, partyDetails, partyTheme, partyHost, partyImage, partyTime, partyTitle, partyAdress, partyParticipants) { 
        obj['partyDate'] = partyDate;
        obj['partyDetails'] = partyDetails;
        obj['partyTheme'] = partyTheme;
        obj['partyHost'] = partyHost;
        obj['partyImage'] = partyImage;
        obj['partyTime'] = partyTime;
        obj['partyTitle'] = partyTitle;
        obj['partyAdress'] = partyAdress;
        obj['partyParticipants'] = partyParticipants;
    }

    /**
     * Constructs a <code>Party</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Party} obj Optional instance to populate.
     * @return {module:model/Party} The populated <code>Party</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Party();

            if (data.hasOwnProperty('_id')) {
                obj['_id'] = ApiClient.convertToType(data['_id'], 'String');
            }
            if (data.hasOwnProperty('partyDate')) {
                obj['partyDate'] = ApiClient.convertToType(data['partyDate'], 'String');
            }
            if (data.hasOwnProperty('partyDetails')) {
                obj['partyDetails'] = ApiClient.convertToType(data['partyDetails'], 'String');
            }
            if (data.hasOwnProperty('partyTheme')) {
                obj['partyTheme'] = ApiClient.convertToType(data['partyTheme'], 'String');
            }
            if (data.hasOwnProperty('partyHost')) {
                obj['partyHost'] = ApiClient.convertToType(data['partyHost'], 'String');
            }
            if (data.hasOwnProperty('partyImage')) {
                obj['partyImage'] = PartyPartyImage.constructFromObject(data['partyImage']);
            }
            if (data.hasOwnProperty('partyTime')) {
                obj['partyTime'] = ApiClient.convertToType(data['partyTime'], 'String');
            }
            if (data.hasOwnProperty('partyTitle')) {
                obj['partyTitle'] = ApiClient.convertToType(data['partyTitle'], 'String');
            }
            if (data.hasOwnProperty('partyAdress')) {
                obj['partyAdress'] = ApiClient.convertToType(data['partyAdress'], 'String');
            }
            if (data.hasOwnProperty('partyParticipants')) {
                obj['partyParticipants'] = ApiClient.convertToType(data['partyParticipants'], ['String']);
            }
        }
        return obj;
    }


}

/**
 * @member {String} _id
 */
Party.prototype['_id'] = undefined;

/**
 * @member {String} partyDate
 */
Party.prototype['partyDate'] = undefined;

/**
 * @member {String} partyDetails
 */
Party.prototype['partyDetails'] = undefined;

/**
 * @member {String} partyTheme
 */
Party.prototype['partyTheme'] = undefined;

/**
 * @member {String} partyHost
 */
Party.prototype['partyHost'] = undefined;

/**
 * @member {module:model/PartyPartyImage} partyImage
 */
Party.prototype['partyImage'] = undefined;

/**
 * @member {String} partyTime
 */
Party.prototype['partyTime'] = undefined;

/**
 * @member {String} partyTitle
 */
Party.prototype['partyTitle'] = undefined;

/**
 * @member {String} partyAdress
 */
Party.prototype['partyAdress'] = undefined;

/**
 * @member {Array.<String>} partyParticipants
 */
Party.prototype['partyParticipants'] = undefined;






export default Party;

